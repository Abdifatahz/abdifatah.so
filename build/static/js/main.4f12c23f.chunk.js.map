{"version":3,"sources":["assets/img/profile.jpg","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","isBoxVisible","darkMode","toggle","setState","prevState","changeMode","this","className","class","viewBox","xmlns","onClick","bind","d","id","to","src","Profile","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,qC,uMCqL5BC,E,4MA/KbC,MAAQ,CACNC,cAAc,EACdC,UAAU,G,EAGZC,OAAS,WACP,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEJ,cAAeI,EAAUJ,kB,EAG3DK,WAAa,WACX,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAAEH,UAAWG,EAAUH,c,uDAG7C,IAAD,EAC4BK,KAAKP,MAAhCC,EADD,EACCA,aAAcC,EADf,EACeA,SAEtB,OACE,yBAAKM,UAAU,4BACb,yBACEA,UAAS,mGACPN,EAAW,cAAgB,kBAE7B,yBAAKO,MAAM,mDACT,0BAAMA,MAAM,wCAAZ,gBAIF,yBAAKA,MAAM,mBACT,4BAAQA,MAAM,gHACZ,yBACEA,MAAM,uBACNC,QAAQ,YACRC,MAAM,6BACNC,QAASL,KAAKJ,OAAOU,QAErB,uCACA,0BAAMC,EAAE,mDAId,yBAAKL,MAAM,4DACT,yBACEM,GAAG,MACHP,UAAS,+BACPP,EAAe,gCAAkC,aAGnD,kBAAC,IAAD,CACEO,UAAU,0EACVQ,GAAG,KAFL,QAMA,kBAAC,IAAD,CACER,UAAU,0EACVQ,GAAG,KAFL,YAMA,kBAAC,IAAD,CACER,UAAU,0EACVQ,GAAG,KAFL,YAOF,yBACER,UAAS,UACPP,EAAe,gCAAkC,aAGnD,kBAAC,IAAD,CACEO,UAAU,iEACVQ,GAAG,IACHJ,QAASL,KAAKD,WAAWO,QAExBX,EAAW,eAAO,mBAM3B,6BAASM,UAAU,6CACjB,6BACEA,UAAS,mCACPN,EAAW,cAAgB,kBAG7B,wBAAIM,UAAU,4BAAd,sBACA,uBAAGA,UAAU,iBAAb,yCAGA,uBAAGA,UAAU,oDACV,IADH,0VASA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iEAAf,iBAGA,yBAAKA,UAAU,6CACb,wBAAIA,UAAU,8EAAd,8BAGA,wBAAIA,UAAU,8EAAd,kBAGA,wBAAIA,UAAU,8EAAd,wBAMN,2BACEA,UAAS,8DACPN,EACI,yCACA,gBAGN,yBACEM,UAAU,yDACVS,IAAKC,MAGP,yBAAKV,UAAU,eACb,yBACEA,UAAS,yDACPN,EAAW,kBAAoB,oBAFnC,gBAOA,yBAAKM,UAAU,2CACb,wBACEA,UAAS,wDACPN,EACI,sCACA,0CAJR,WASA,wBACEM,UAAS,wDACPN,EACI,sCACA,0CAJR,SASA,wBACEM,UAAS,wDACPN,EACI,sCACA,0CAJR,wB,GA9JEiB,IAAMC,WCOTrB,MARf,WACE,OACE,yBAAKS,UAAU,wBACb,kBAAC,EAAD,QCKca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4f12c23f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.8ae75722.jpg\";","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport Profile from \"../assets/img/profile.jpg\";\r\nimport \"../index.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isBoxVisible: true,\r\n    darkMode: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState((prevState) => ({ isBoxVisible: !prevState.isBoxVisible }));\r\n  };\r\n\r\n  changeMode = () => {\r\n    this.setState((prevState) => ({ darkMode: !prevState.darkMode }));\r\n  };\r\n\r\n  render() {\r\n    const { isBoxVisible, darkMode } = this.state;\r\n\r\n    return (\r\n      <div className=\"w-full mx-auto max-w-6xl\">\r\n        <nav\r\n          className={`flex items-center justify-between flex-wrap  p-6 items-center py-4 font-sans \r\n          ${darkMode ? \"bg-gray-800\" : \"bg-indigo-700\"}`}\r\n        >\r\n          <div class=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n            <span class=\"font-semibold text-xl tracking-tight\">\r\n              Abdifatah A\r\n            </span>\r\n          </div>\r\n          <div class=\"block lg:hidden\">\r\n            <button class=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n              <svg\r\n                class=\"fill-current h-6 w-6\"\r\n                viewBox=\"0 0 20 20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                onClick={this.toggle.bind()}\r\n              >\r\n                <title>Menu</title>\r\n                <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n            <div\r\n              id=\"nav\"\r\n              className={`text-sm lg:flex-grow ${\r\n                isBoxVisible ? \"hidden md:block flex flex-col\" : \"sm:block\"\r\n              }`}\r\n            >\r\n              <Link\r\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4 \"\r\n                to=\"/\"\r\n              >\r\n                Blog\r\n              </Link>\r\n              <Link\r\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4 \"\r\n                to=\"/\"\r\n              >\r\n                Projects\r\n              </Link>\r\n              <Link\r\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4 \"\r\n                to=\"/\"\r\n              >\r\n                Contact\r\n              </Link>\r\n            </div>\r\n            <div\r\n              className={`${\r\n                isBoxVisible ? \"hidden md:block flex flex-col\" : \"sm:block\"\r\n              }`}\r\n            >\r\n              <Link\r\n                className=\"inline-block text-2xl px-4 py-2  text-white  mt-4 lg:mt-0 mode\"\r\n                to=\"/\"\r\n                onClick={this.changeMode.bind()}\r\n              >\r\n                {darkMode ? \"ðŸŒž\" : \"ðŸŒ™\"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <section className=\"w-full  mx-auto flex flex-col sm:flex-row\">\r\n          <section\r\n            className={`md:w-2/3  p-8 text-right ${\r\n              darkMode ? \"bg-gray-900\" : \"bg-indigo-800\"\r\n            }`}\r\n          >\r\n            <h4 className=\"text-orange-400 text-4xl\">Abdifatah Abdilahi</h4>\r\n            <p className=\"text-gray-200\">\r\n              I'm a Fullstack Enginner in Mogadishu\r\n            </p>\r\n            <p className=\"text-2xl text-gray-200 leading-relaxed text-left\">\r\n              {\" \"}\r\n              I am a full-stack PHP developer.I spend my days designing and\r\n              developing web applications, and teaching on Somcoders. I\r\n              specialize in the Laravel PHP framework on the backend, React.js\r\n              on the frontend ,Bootstrap and Tailwind CSS for styling. Currently\r\n              I work full time as a Laravel developer, building internal apps\r\n              and tools for my employer.\r\n            </p>\r\n            <div className=\"my-5\">\r\n              <div className=\"w-full text-orange-500 font-bold text-3xl text-center d-block\">\r\n                Side projects\r\n              </div>\r\n              <div className=\"flex flex-col  justify-around sm:flex-row\">\r\n                <h4 className=\"bg-orange-600 p-4 text-gray-200 font-bold text-lg text-center sm:w-1/2 m-2\">\r\n                  Learning Management System\r\n                </h4>\r\n                <h4 className=\"bg-orange-600 p-4 text-gray-200 font-bold text-lg text-center sm:w-1/2 m-2\">\r\n                  Humar Resource\r\n                </h4>\r\n                <h4 className=\"bg-orange-600 p-4 text-gray-200 font-bold text-lg text-center sm:w-1/2 m-2\">\r\n                  Online Exmination\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <aside\r\n            className={`md:w-1/3  flex flex-col justify-center items-center ${\r\n              darkMode\r\n                ? \"bg-gray-900 border-l-2 border-gray-600\"\r\n                : \"bg-gray-200\"\r\n            }`}\r\n          >\r\n            <img\r\n              className=\"rounded-full border-8 my-4 w-64 h-64 border-indigo-500\"\r\n              src={Profile}\r\n            />\r\n\r\n            <div className=\"my-5 w-full\">\r\n              <div\r\n                className={`w-full  font-bold text-3xl text-center d-block ${\r\n                  darkMode ? \"text-yellow-500\" : \"text-indigo-500\"\r\n                }`}\r\n              >\r\n                Professional\r\n              </div>\r\n              <div className=\"flex flex-col justify-around flex-start\">\r\n                <h4\r\n                  className={`border-2  font-bold text-2xl text-center  m-2 ${\r\n                    darkMode\r\n                      ? \"border-gray-400 p-4 text-yellow-500\"\r\n                      : \"border-orange-600 p-4 text-indigo-800\"\r\n                  }`}\r\n                >\r\n                  Laravel\r\n                </h4>\r\n                <h4\r\n                  className={`border-2  font-bold text-2xl text-center  m-2 ${\r\n                    darkMode\r\n                      ? \"border-gray-400 p-4 text-yellow-500\"\r\n                      : \"border-orange-600 p-4 text-indigo-800\"\r\n                  }`}\r\n                >\r\n                  React\r\n                </h4>\r\n                <h4\r\n                  className={`border-2  font-bold text-2xl text-center  m-2 ${\r\n                    darkMode\r\n                      ? \"border-gray-400 p-4 text-yellow-500\"\r\n                      : \"border-orange-600 p-4 text-indigo-800\"\r\n                  }`}\r\n                >\r\n                  TailwindCSS\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport \"./assets/main.css\";\nimport Home from \"./components/home\";\n\nfunction App() {\n  return (\n    <div className=\"App bg-blue-100 h-64\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}